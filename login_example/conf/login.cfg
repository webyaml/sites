# filename: conf/login.cfg
# path: /login

############################################################
#
#	Login: Simple login form example
#
############################################################

# Includes

# Html elements
include conf/elements/html-basic.cfg
include conf/elements/html-bootstrap-panel.cfg
include conf/elements/html-form.cfg

# Database settings
include conf/settings/db.cfg

# Vars

# Page name
view_name: &view_name "Login"

# Dashboard url
dashboard_url: &dashboard_url "/dashboard"

# View
view: &view

	# Check to see if the user is already logged in
	process:
	
		# check for {{session:login}}
		type: lib.processors.logic.Evaluate
		expression: "{{exists(session:login)}}"
		
		# This user is already logged in
		'true':
			# Redirect user to dashboard page
			type: lib.processors.redirect.Redirect
			url: *dashboard_url
	
	# The user is not logged in
	# Display login form
	
	# Make a column in the middle of the screen
	# This uses the bootstrap grid system
	**div4
	offset: 4
	content:
	
		# Place a bootstrap panel in the column
		**panel
		title: Please Sign In
		color: default
		style: 'margin-top: 20px'
		content:
			
			# Place a form in the panel
			
			# Form element
			**form
			
			# Form fields
			content:						
				-
					**textbox
					name: username
					required:
					required_indicator: ''
					attributes:
						placeholder: Username
				-
					**password
					name: password
					required:
					required_indicator: ''
					attributes:
						placeholder: Password
				-
					**button
					name: login
					color: primary
					size: lg
					class: "btn btn-{{size}} btn-{{color}} btn-block"
					
			# Form Processing
			postprocess:
				
				# Authenticate username and password against a mysql database
				**select
				sql: |
					SELECT * 
					FROM user 
					WHERE user = '{{post:username}}' 
					AND pass = '{{sha256(post:password)}}'
					AND status = 'active'
					ORDER BY id
					LIMIT 1
				
				# Store the result in memory as {{user}}
				result:
					store: user
					entry: '{{0}}'
					
				# Login was successful
				'true':
					# store the user's database record in the session
					# set login = True in the session
					type: lib.processors.session.Cache
					cache:
						user: '{{user}}'
						login: 'True'
					'true':
						# redirect to dashboard
						type: lib.processors.redirect.Redirect
						url: *dashboard_url
						
				# Login failed
				'false':
					content:
						# Show error message
						-
							**h5
							value: |
								Username or password is incorrect
							class: text-danger text-center

# Include template
include conf/template_login.cfg

